{"version":3,"file":"static/js/984.d74ee346.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactsFilter/ContactsFilter.styled.jsx","components/ContactsFilter/ContactsFilter.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactItem.jsx","components/ContactsList/ContactsList.jsx","pages/Constacts/Contacts.styled.jsx","pages/Constacts/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form, Field } from 'formik';\n\nexport const ErrorText = styled.p`\n  color: red;\n`;\n\nexport const FormBlock = styled(Form)`\n  width: 500px;\n  border: ${p => p.theme.borders.normal};\n  display: flex;\n  flex-direction: column;\n  padding: ${p => p.theme.space[5]}px;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: ${p => p.theme.space[3]}px;\n`\nexport const Input = styled(Field)`\n  width: ${p => p.theme.sizes.input};\n`\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${p => p.theme.sizes.button};\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  :hover{\n    background-color: ${p => p.theme.colors.btnHover};\n  }\n`;","import { Formik, ErrorMessage } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport {\n  ErrorText,\n  FormBlock,\n  Label,\n  Input,\n  Button,\n} from './ContactForm.styled';\nimport { getContacts } from 'redux/selectors';\nimport { addContact} from 'redux/operations';\n\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(),\n  number: Yup.string().required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onFormSubmit = ({ name, number }, { resetForm }) => {\n    const checkContactName = contacts.some(contact => contact.name === name);\n    if (checkContactName) {\n      Notiflix.Report.warning(`${name} is Already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onFormSubmit}\n      validationSchema={validationSchema}\n    >\n      <FormBlock autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <FormError name=\"name\" />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <FormError name=\"number\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormBlock>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  onAddTask: PropTypes.func,\n};\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${p => p.theme.space[5]}px;\n  width: ${p => p.theme.sizes.input};\n`;\n\nexport const Input = styled.input`\n  \n  margin-top: ${p => p.theme.space[3]}px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './ContactsFilter.styled';\nimport { changeFilter } from 'redux/filterSlice';\n\n\nexport const ContactsFilter = () => {\n  const filter = useSelector(state => state.filter.filter);\n  const dispatch = useDispatch();\n\n  const onFilter = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <Label>\n      Find contact by the name\n      <Input type=\"text\" value={filter} onChange={onFilter} />\n    </Label>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const DeleteButton = styled.button`\n  margin-left: ${p => p.theme.space[3]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-left: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  :hover {\n    background-color: ${p => p.theme.colors.deleteBtn};\n  }\n`;\n\nexport const EditButton = styled.button`\n  margin-left: ${p => p.theme.space[3]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-left: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  :hover {\n    background-color: ${p => p.theme.colors.deleteBtn};\n  }\n`;\n\nexport const Input = styled.input`\n  width: 120px;\n  border-radius: ${p => p.theme.radii.normal};\n  :first-child {\n    margin-right: 10px;\n  }\n`;\n","import {\n  DeleteButton,\n  EditButton,\n  Input,\n} from './ContactsList.styled';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\n\nimport { deleteContact, editContact } from 'redux/operations';\nimport { useState } from 'react';\nimport { getIsLoading } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\nimport { VscSaveAs } from 'react-icons/vsc';\n\nexport const ContactsItem = ({ id, name, number, idx: index }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const [deleteID, setDeleteId] = useState(null);\n  const [isEdit, setIsEdit] = useState(false);\n  const [editName, setEditName] = useState('');\n  const [editNumber, setEditNumber] = useState('');\n\n  const onDeleteContact = id => {\n    setDeleteId(id);\n    dispatch(deleteContact(id));\n  };\n  const onEdit = ({ id, name, number }) => {\n    setIsEdit(!isEdit);\n    setEditName(name);\n    setEditNumber(number);\n    if (isEdit) {\n      dispatch(\n        editContact({ id, body: { name: editName, number: editNumber } })\n      );\n    }\n  };\n  const onChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setEditName(value);\n      case 'number':\n        return setEditNumber(value);\n      default:\n        return;\n    }\n  };\n  return (\n    <>\n      <TableRow sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n        <TableCell align=\"right\">{index + 1}</TableCell>\n        {isEdit ? (\n          <>\n            <TableCell align=\"right\">\n              <Input\n                type=\"text\"\n                value={editName}\n                name=\"name\"\n                onChange={onChange}\n              />\n            </TableCell>\n            <TableCell align=\"right\">\n              {' '}\n              <Input\n                type=\"text\"\n                value={editNumber}\n                name=\"number\"\n                onChange={onChange}\n              />\n            </TableCell>\n          </>\n        ) : (\n          <>\n            <TableCell align=\"right\">{name}</TableCell>\n            <TableCell align=\"right\">{number}</TableCell>\n          </>\n        )}\n\n        <TableCell align=\"right\">\n          <DeleteButton\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            disabled={isLoading && deleteID === id}\n          >\n            {isLoading && deleteID === id ? 'Deleting' : 'Delete'}{' '}\n            <AiOutlineDelete />\n          </DeleteButton>\n          <EditButton onClick={() => onEdit({ id, name, number })}>\n            {isEdit ? (\n              <>\n                Save <VscSaveAs />\n              </>\n            ) : (\n              <>\n                Edit <AiOutlineEdit />\n              </>\n            )}\n          </EditButton>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { getContacts, selectVisibleContacts, getFilter } from 'redux/selectors';\nimport { ContactsItem } from './ContactItem';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  return (\n    <>\n      <TableContainer component={Paper} sx={{ maxWidth: 900 }}>\n        <Table sx={{ minWidth: 450 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\">Id</TableCell>\n              <TableCell align=\"right\">Name</TableCell>\n              <TableCell align=\"right\">Number</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {selectVisibleContacts(contacts, filter).map(\n              ({ id, name, number }, idx) => (\n                <ContactsItem\n                  id={id}\n                  name={name}\n                  number={number}\n                  key={id}\n                  idx={idx}\n                />\n              )\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const ContactTitle = styled.h2`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\nexport const Container = styled.div`\n  padding: ${p => p.theme.space[5]}px;\n`;\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactsFilter } from \"components/ContactsFilter/ContactsFilter\";\nimport { ContactsList } from \"components/ContactsList/ContactsList\";\nimport {  useEffect } from \"react\";\nimport { Circles } from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/operations\";\nimport { getError, getIsLoading } from \"redux/selectors\";\nimport { ContactTitle, Container, Title } from \"./Contacts.styled\";\n\n const Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(fetchContacts(controller.signal));\n    return () => controller.abort();\n  }, [dispatch]);\n   return (\n       <Container>\n         <div>\n           <Title>Phonebook</Title>\n           <ContactForm />\n           <ContactTitle>\n             Contacts{' '}\n             {isLoading && !error && (\n               <Circles\n                 height=\"20\"\n                 width=\"20\"\n                 color=\"red\"\n                 ariaLabel=\"circles-loading\"\n                 visible={true}\n                 wrapperStyle={{ display: 'inline' }}\n               />\n             )}\n           </ContactTitle>\n           <ContactsFilter />\n           <ContactsList />\n         </div>\n       </Container>\n   );\n};\n\nexport default Contacts"],"names":["ErrorText","styled","FormBlock","Form","p","theme","borders","normal","space","Label","Input","Field","sizes","input","Button","button","radii","colors","btnHover","validationSchema","Yup","name","required","number","initialValues","FormError","render","message","ContactForm","contacts","useSelector","getContacts","dispatch","useDispatch","onSubmit","resetForm","some","contact","Notiflix","addContact","autoComplete","htmlFor","type","pattern","title","ContactsFilter","filter","state","value","onChange","e","changeFilter","target","DeleteButton","deleteBtn","EditButton","ContactsItem","id","index","idx","isLoading","getIsLoading","useState","deleteID","setDeleteId","isEdit","setIsEdit","editName","setEditName","editNumber","setEditNumber","TableRow","sx","border","TableCell","align","onClick","deleteContact","onDeleteContact","disabled","editContact","body","onEdit","ContactsList","getFilter","TableContainer","component","Paper","maxWidth","Table","minWidth","TableHead","TableBody","selectVisibleContacts","map","Title","ContactTitle","Container","error","getError","useEffect","controller","AbortController","fetchContacts","signal","abort","height","width","color","ariaLabel","visible","wrapperStyle","display"],"sourceRoot":""}